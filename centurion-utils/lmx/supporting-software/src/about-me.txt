This directory contains source files for the LMX runtime 
Supporting Software.  The code in these files needs to be
compiled and linked with the generated code for the
generated code to work properly.  These files are common 
to all platforms.

Once initial installation is complete they may need to be
relocated to a location more appropriate to your build
environment.

The set of source files you need for your build will depend
on your requirements:

 - You will most likely require the lmxparse.cpp file, and, 
   assuming you don't use your own types system, the lmxtypes.cpp
   file.

 - If you have not disabled regular expression handling you will
   need to include lmxregex.cpp and lmxunicode.cpp in your build
   (or your own variant of these, see "Pattern Facet Handling 
   Customization" in the documentation for more details on this).

 - If you want the SOAP functionality then you will need to include
   lmxsoap.cpp.

 - Finally, if you are using LMX's Windows HTTP functionality,
   you should include lmxwinhttp.cpp. (Note that lmxwinhttp.cpp
   is Windows specific and will not compile on other platforms.
   We recommend using libraries such as Linux's libcurl on other
   platforms.)

During the build process, these files will require access to the
Supporting Software include files, typically located in the
supporting-software/include sub-directory of the installation.
(Note that you might want to move the various files out of their
default location when building a library so that you can more
easily place them under version control.)

The exact process of building the source code will depend on your
platform.  The simplest approach is to directly include the various
source files in with your main project or makefile.

Alternatively you can compile the runtime Supporting Software into
a library or DLL.

The Windows version of LMX includes a batch file called "build-libs.bat"
that can be used to build the runtime library source code into static
.lib files and dynamic .dll files.  Read the comments in 
build-libs.bat for details on how to customize the build to your needs.

Note that a key part of building the Supporting Software source code
into a Windows DLL, is to configure your project to define LMX_WANT_DLL as 1
(i.e. "Project->Properties->Configuration Properties->C/C++->Preprocessor->
Preprocessor Definitions" includes LMX_WANT_DLL=1;.) and also define
LMX_RT_SOURCE (the value is not important in this latter case).
(For versions prior to version 6.1 of LMX or if you only want part of the
LMX Supporting Software in a DLL, instead of defining LMX_RT_SOURCE,
define LMX_PARSE_SOURCE, LMX_TYPES_SOURCE, and LMX_REGEX_SOURCE.)
(See also the documentation section "Compiling Generated Code into a DLL".)

The Linux version of LMX includes a makefile called MakefileLMXlib
that can be used as a starting point for writing a makefile for 
building the Supporting Software into a library.

See the documentation at http://www.codalogic.com/lmx/documentation.php
for more details.
