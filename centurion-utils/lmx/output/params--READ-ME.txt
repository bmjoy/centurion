How to Build Your Project
=========================

LMX projects consist of 3 types of code that need to be combined
to build a running executable.

LMX Generated Files
    This code is generated by the LMX code generator from your schema.
    The generated code for this project is:

        C:\Users\utente\Documents\github rattlesmake\centurion\centurion-utils\lmx\output\params.cpp

    and its associated header file:

        C:\Users\utente\Documents\github rattlesmake\centurion\centurion-utils\lmx\output\params.h

LMX Runtime Support Files
    In addition to generated code, LMX also needs Runtime Supporting
    Software files.  These include code common to all LMX projects,
    such as the XML parser and data conversion code.  The relevant
    files are:

        lmxparse.cpp
        lmxtypes.cpp
        lmxregex.cpp
        lmxunicode.cpp

    These are located in the supporting-software/src sub-directory
    of the installation (by default, C:\Program Files\LMX\ on Windows).
    These files use the header following files:

        lmxuser.h
        lmxinternals.h
        lmxparse.h
        lmxtypes.h
        lmxregex.h
        lmxunicode.h

    These are located in the supporting-software/include subdirectory
    of the installation.

    For evaluation purposes, the easiest way to include these files in
    your project is to copy them from the installation location to
    your project folder and then add them to your project.
    (Alternatively, you can build them into a library or DLL that can
    be referenced by your project.  See the about-me.txt file in the
    supporting-software/src installation sub-directory or the
    online documentation for more details about this.)

Code to Use the Generated Code
    This is the code you write to use the generated code.  An example
    file showing how to read and write XML using the generated classes
    is in the file:

        C:\Users\utente\Documents\github rattlesmake\centurion\centurion-utils\lmx\output\params-main.cpp

Once these 3 sets of files are combined you should be able to build
a running program and experiment with reading and writing XML data.


To Explore Further
==================
- Download examples from http://www.codalogic.com/lmx/download.php

- Scan the documentation at http://www.codalogic.com/lmx/documentation.php

- Ask any questions at support@codalogic.com
